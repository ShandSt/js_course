{"version":3,"sources":["webpack://project-structure/./src/components/range-picker/index.js","webpack://project-structure/./src/components/sortable-table/index.js","webpack://project-structure/./src/components/column-chart/index.js","webpack://project-structure/./src/pages/dashboard/bestsellers-header.js","webpack://project-structure/./src/pages/dashboard/index.js","webpack://project-structure/./src/utils/fetch-json.js"],"names":["RangePicker","date","toLocaleString","dateStyle","constructor","from","Date","to","event","isOpen","this","element","classList","contains","isRangePicker","target","close","showDateFrom","selected","render","formatDate","document","createElement","innerHTML","template","firstElementChild","subElements","getSubElements","initEventListeners","Promise","resolve","subElement","querySelectorAll","dataset","elem","input","selector","addEventListener","onDocumentClick","toggle","onSelectorClick","renderDateRangePicker","onRangePickerCellClick","remove","showDate1","showDate2","setMonth","getMonth","renderCalendar","controlLeft","querySelector","controlRight","prev","next","renderHighlight","cell","value","cellDate","toISOString","add","selectedFromElem","closest","selectedToElem","showDate","setDate","monthStr","month","table","dayIndex","getDay","getDate","dateValue","selectingFrom","dispatchEvent","CustomEvent","bubbles","detail","removeEventListener","destroy","SortableTable","headersConfig","url","sorted","id","find","item","sortable","order","isSortLocally","step","start","end","filtered","async","bottom","getBoundingClientRect","documentElement","clientHeight","loading","data","loadData","update","column","newOrder","asc","desc","toggleOrder","append","arrow","sortLocally","sortOnServer","URL","process","wrapper","getTable","renderRows","searchParams","set","price_gte","price_lte","title_like","status","fetchJson","addRows","body","getTableRows","length","rows","childNodes","getTableHeader","map","getHeaderRow","join","title","getHeaderSortingArrow","getTableBody","getTableRow","header","onSortClick","onWindowScroll","sortedData","sortData","arr","sortType","customSorting","direction","sort","a","b","localeCompare","reduce","accum","ColumnChart","label","link","getColumnBody","maxValue","Math","max","scale","chartHeight","percent","toFixed","floor","getLink","headerData","bodyData","textContent","Page","console","log","ORDERS","SALES","CUSTOMERS","encodeURIComponent","ordersData","salesData","customersData","all","Object","values","updateCssClass","components","sortableTable","columnChartNames","cssClassList","getDataForColumnCharts","ordersDataTotal","salesDataTotal","customersDataTotal","ordersChart","salesChart","customersChart","componentNamesList","action","classNameList","componentName","className","getTime","rangePicker","initComponents","renderComponents","keys","forEach","component","root","$element","updateChartsComponents","updateTableComponent","params","response","fetch","toString","err","FetchError","ok","errorText","statusText","json","error","message","Error","super","window","reason","alert"],"mappings":"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","file":"dashboard-index-js-748.js","sourcesContent":["export default class RangePicker {\n  element = null;\n  subElements = {};\n  selectingFrom = true;\n  selected = {\n    from: new Date(),\n    to: new Date()\n  };\n\n  static formatDate (date) {\n    return date.toLocaleString('ru', {dateStyle: 'short'})\n  }\n\n  onDocumentClick = event => {\n    const isOpen = this.element.classList.contains('rangepicker_open');\n    const isRangePicker = this.element.contains(event.target);\n\n    if (isOpen && !isRangePicker) {\n      this.close();\n    }\n  };\n\n  constructor({from = new Date(), to = new Date()} = {}) {\n    this.showDateFrom = new Date(from);\n    this.selected = {from, to};\n\n    this.render();\n  }\n\n  get template () {\n    const from = RangePicker.formatDate(this.selected.from);\n    const to = RangePicker.formatDate(this.selected.to);\n\n    return `<div class=\"rangepicker\">\n      <div class=\"rangepicker__input\" data-elem=\"input\">\n        <span data-elem=\"from\">${from}</span> -\n        <span data-elem=\"to\">${to}</span>\n      </div>\n      <div class=\"rangepicker__selector\" data-elem=\"selector\"></div>\n    </div>`;\n  }\n\n  render() {\n    const element = document.createElement('div');\n\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(element);\n\n    this.initEventListeners();\n\n    return Promise.resolve(this.element);\n  }\n\n  getSubElements (element) {\n    const subElements = {};\n\n    for (const subElement of element.querySelectorAll('[data-elem]')) {\n      subElements[subElement.dataset.elem] = subElement;\n    }\n\n    return subElements;\n  }\n\n  initEventListeners () {\n    const {input, selector} = this.subElements;\n\n    document.addEventListener('click', this.onDocumentClick, true);\n    input.addEventListener('click', () => this.toggle());\n    selector.addEventListener('click', event => this.onSelectorClick(event));\n  }\n\n  toggle() {\n    this.element.classList.toggle('rangepicker_open');\n    this.renderDateRangePicker();\n  }\n\n  onSelectorClick({target}) {\n    if (target.classList.contains('rangepicker__cell')) {\n      this.onRangePickerCellClick(target);\n    }\n  }\n\n  close() {\n    this.element.classList.remove('rangepicker_open');\n  }\n\n  renderDateRangePicker() {\n    const showDate1 = new Date(this.showDateFrom);\n    const showDate2 = new Date(this.showDateFrom);\n    const { selector } = this.subElements;\n\n    showDate2.setMonth(showDate2.getMonth() + 1);\n\n    selector.innerHTML = `\n      <div class=\"rangepicker__selector-arrow\"></div>\n      <div class=\"rangepicker__selector-control-left\"></div>\n      <div class=\"rangepicker__selector-control-right\"></div>\n      ${this.renderCalendar(showDate1)}\n      ${this.renderCalendar(showDate2)}\n    `;\n\n    const controlLeft = selector.querySelector('.rangepicker__selector-control-left');\n    const controlRight = selector.querySelector('.rangepicker__selector-control-right');\n\n    controlLeft.addEventListener('click', () => this.prev());\n    controlRight.addEventListener('click', () => this.next());\n\n    this.renderHighlight();\n  }\n\n  prev () {\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() - 1);\n    this.renderDateRangePicker();\n  }\n\n  next () {\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() + 1);\n    this.renderDateRangePicker();\n  }\n\n  renderHighlight() {\n    const { from, to } = this.selected;\n\n    for (const cell of this.element.querySelectorAll('.rangepicker__cell')) {\n      const { value } = cell.dataset;\n      const cellDate = new Date(value);\n\n      cell.classList.remove('rangepicker__selected-from');\n      cell.classList.remove('rangepicker__selected-between');\n      cell.classList.remove('rangepicker__selected-to');\n\n      if (from && value === from.toISOString()) {\n        cell.classList.add('rangepicker__selected-from');\n      } else if (to && value === to.toISOString()) {\n        cell.classList.add('rangepicker__selected-to');\n      } else if (from && to && cellDate >= from && cellDate <= to) {\n        cell.classList.add('rangepicker__selected-between');\n      }\n    }\n\n    if (from) {\n      const selectedFromElem = this.element.querySelector(`[data-value=\"${from.toISOString()}\"]`);\n      if (selectedFromElem) {\n        selectedFromElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-from');\n      }\n    }\n\n    if (to) {\n      const selectedToElem = this.element.querySelector(`[data-value=\"${to.toISOString()}\"]`);\n      if (selectedToElem) {\n        selectedToElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-to');\n      }\n    }\n  }\n\n  renderCalendar(showDate) {\n    const date = new Date(showDate);\n    const getGridStartIndex = dayIndex => {\n      const index = dayIndex === 0 ? 6 : (dayIndex - 1); // make Sunday (0) the last day\n      return index + 1;\n    };\n\n    date.setDate(1);\n\n    const monthStr = date.toLocaleString('ru', {month: 'long'});\n\n    let table = `<div class=\"rangepicker__calendar\">\n      <div class=\"rangepicker__month-indicator\">\n        <time datetime=${monthStr}>${monthStr}</time>\n      </div>\n      <div class=\"rangepicker__day-of-week\">\n        <div>Пн</div><div>Вт</div><div>Ср</div><div>Чт</div><div>Пт</div><div>Сб</div><div>Вс</div>\n      </div>\n      <div class=\"rangepicker__date-grid\">\n    `;\n\n    table += `\n      <button type=\"button\"\n        class=\"rangepicker__cell\"\n        data-value=\"${date.toISOString()}\"\n        style=\"--start-from: ${getGridStartIndex(date.getDay())}\">\n          ${date.getDate()}\n      </button>`;\n\n    date.setDate(2);\n\n    while (date.getMonth() === showDate.getMonth()) {\n      table += `\n        <button type=\"button\"\n          class=\"rangepicker__cell\"\n          data-value=\"${date.toISOString()}\">\n            ${date.getDate()}\n        </button>`;\n\n      date.setDate(date.getDate() + 1);\n    }\n\n    table += '</div></div>';\n\n    return table;\n  }\n\n  onRangePickerCellClick(target) {\n    const { value } = target.dataset;\n\n    if (value) {\n      const dateValue = new Date(value);\n\n      if (this.selectingFrom) {\n        this.selected = {\n          from: dateValue,\n          to:   null\n        };\n        this.selectingFrom = false;\n        this.renderHighlight();\n      } else {\n        if (dateValue > this.selected.from) {\n          this.selected.to = dateValue;\n        } else {\n          this.selected.to = this.selected.from;\n          this.selected.from = dateValue;\n        }\n\n        this.selectingFrom = true;\n        this.renderHighlight();\n      }\n\n      if (this.selected.from && this.selected.to) {\n        this.dispatchEvent();\n        this.close();\n        this.subElements.from.innerHTML = RangePicker.formatDate(this.selected.from);\n        this.subElements.to.innerHTML = RangePicker.formatDate(this.selected.to)\n      }\n    }\n  }\n\n  dispatchEvent () {\n    this.element.dispatchEvent(new CustomEvent('date-select', {\n      bubbles: true,\n      detail:  this.selected\n    }));\n  }\n\n  remove () {\n    this.element.remove();\n    document.removeEventListener('click', this.onDocumentClick, true);\n  }\n\n  destroy() {\n    this.remove();\n    this.element = null;\n    this.subElements = {};\n    this.selectingFrom = true;\n    this.selected = {\n      from: new Date(),\n      to: new Date()\n    };\n\n    return this;\n  }\n}\n","import fetchJson from \"../../utils/fetch-json.js\";\n\nconst BACKEND_URL = process.env.BACKEND_URL;\n\nexport default class SortableTable {\n  element;\n  subElements = {};\n  data = [];\n  loading = false;\n  step = 20;\n  start = 1;\n  end = this.start + this.step;\n\n  onWindowScroll = async () => {\n    const { bottom } = this.element.getBoundingClientRect();\n    const { id, order } = this.sorted;\n\n    if (bottom < document.documentElement.clientHeight && !this.loading && !this.isSortLocally) {\n      this.start = this.end;\n      this.end = this.start + this.step;\n\n      this.loading = true;\n\n      const data = await this.loadData(id, order, this.start, this.end);\n      this.update(data);\n\n      this.loading = false;\n    }\n  };\n\n  onSortClick = event => {\n    const column = event.target.closest('[data-sortable=\"true\"]');\n    const toggleOrder = order => {\n      const orders = {\n        asc: 'desc',\n        desc: 'asc'\n      };\n\n      return orders[order];\n    };\n\n    if (column) {\n      const { id, order } = column.dataset;\n      const newOrder = toggleOrder(order);\n\n      this.sorted = {\n        id,\n        order: newOrder\n      };\n\n      column.dataset.order = newOrder;\n      column.append(this.subElements.arrow);\n\n      if (this.isSortLocally) {\n        this.sortLocally(id, newOrder);\n      } else {\n        this.start = 1;\n        this.end = 1 + this.step;\n        this.sortOnServer(id, newOrder, this.start, this.end);\n      }\n    }\n  };\n\n  constructor(headersConfig = [], {\n    url = '',\n    sorted = {\n      id: headersConfig.find(item => item.sortable).id,\n      order: 'asc'\n    },\n    isSortLocally = false,\n    step = 20,\n    start = 1,\n    end = start + step,\n    from = null,\n    to = null,\n    filtered = null,\n  } = {}) {\n\n    this.headersConfig = headersConfig;\n    this.url = new URL(url, BACKEND_URL);\n    this.sorted = sorted;\n    this.isSortLocally = isSortLocally;\n    this.step = step;\n    this.start = start;\n    this.end = end;\n    //In ISO format, use Date.toISOString\n    this.from = from;\n    this.to = to;\n    this.filtered = filtered;\n\n    this.render();\n  }\n\n  async render() {\n    const {id, order} = this.sorted;\n    const wrapper = document.createElement('div');\n\n    wrapper.innerHTML = this.getTable();\n\n    const element = wrapper.firstElementChild;\n\n    this.element = element;\n    this.subElements = this.getSubElements(element);\n\n    const data = await this.loadData(id, order, this.start, this.end);\n\n    this.renderRows(data);\n    this.initEventListeners();\n    return this.element;\n  }\n\n  async loadData (id, order, start = this.start, end = this.end) {\n    if (this.from && this.to) {\n      this.url.searchParams.set('createdAt_gte', this.from);\n      this.url.searchParams.set('createdAt_lte', this.to);\n    }\n\n    if (this.filtered) {\n      const { price_gte, price_lte, title_like, status } = this.filtered;\n\n      this.url.searchParams.set('price_gte', price_gte);\n      this.url.searchParams.set('price_lte', price_lte);\n      \n      if (title_like) {\n        this.url.searchParams.set('title_like', title_like);\n      }\n\n      if (status) {\n        this.url.searchParams.set('status', status);\n      }\n\n    }\n\n    this.url.searchParams.set('_sort', id);\n    this.url.searchParams.set('_order', order);\n    this.url.searchParams.set('_start', start);\n    this.url.searchParams.set('_end', end);\n\n    this.element.classList.add('sortable-table_loading');\n    \n\n    const data = await fetchJson(this.url);\n\n    this.element.classList.remove('sortable-table_loading');\n\n    return data;\n  }\n\n  addRows (data) {\n    this.data = data;\n    this.subElements.body.innerHTML = this.getTableRows(data);\n\n    if (data.length) {\n      this.element.classList.remove('sortable-table_empty');\n    } else {\n      this.element.classList.add('sortable-table_empty');\n    }\n  }\n\n  update (data) {\n    const rows = document.createElement('div');\n\n    this.data = [...this.data, ...data];\n    rows.innerHTML = this.getTableRows(data);\n\n    this.subElements.body.append(...rows.childNodes);\n    return rows;\n  }\n\n  getTableHeader() {\n    return `<div data-element=\"header\" class=\"sortable-table__header sortable-table__row\">\n      ${this.headersConfig.map(item => this.getHeaderRow(item)).join('')}\n    </div>`;\n  }\n\n  getHeaderRow ({id, title, sortable}) {\n    const order = this.sorted.id === id ? this.sorted.order : 'asc';\n\n    return `\n      <div class=\"sortable-table__cell\" data-id=\"${id}\" data-sortable=\"${sortable}\" data-order=\"${order}\">\n        <span>${title}</span>\n        ${this.getHeaderSortingArrow(id)}\n      </div>\n    `;\n  }\n\n  getHeaderSortingArrow (id) {\n    const isOrderExist = this.sorted.id === id ? this.sorted.order : '';\n\n    return isOrderExist\n      ? `<span data-element=\"arrow\" class=\"sortable-table__sort-arrow\">\n          <span class=\"sort-arrow\"></span>\n        </span>`\n      : '';\n  }\n\n  getTableBody(data) {\n    return `\n      <div data-element=\"body\" class=\"sortable-table__body\">\n        ${this.getTableRows(data)}\n      </div>`;\n  }\n\n  getTableRows (data) {\n    return data.map(item => `\n      <a href=\"/products/${item.id}\" class=\"sortable-table__row\">\n        ${this.getTableRow(item, data)}\n      </a>`\n    ).join('');\n  }\n\n  getTableRow (item) {\n    const cells = this.headersConfig.map(({id, template}) => {\n      return {\n        id,\n        template\n      }\n    });\n\n    return cells.map(({id, template}) => {\n      return template\n        ? template(item[id])\n        : `<div class=\"sortable-table__cell\">${item[id]}</div>`\n    }).join('');\n  }\n\n  getTable() {\n    return `\n      <div class=\"sortable-table\">\n        ${this.getTableHeader()}\n        ${this.getTableBody(this.data)}\n\n        <div data-element=\"loading\" class=\"loading-line sortable-table__loading-line\"></div>\n\n        <div data-element=\"emptyPlaceholder\" class=\"sortable-table__empty-placeholder\">\n          No data\n        </div>\n      </div>`;\n  }\n\n  initEventListeners () {\n    this.subElements.header.addEventListener('pointerdown', this.onSortClick);\n    document.addEventListener('scroll', this.onWindowScroll);\n  }\n\n  sortLocally (id, order) {\n    const sortedData = this.sortData(id, order);\n\n    this.subElements.body.innerHTML = this.getTableBody(sortedData);\n  }\n\n  async sortOnServer (id, order, start, end) {\n    const data = await this.loadData(id, order, start, end);\n\n    this.renderRows(data);\n  }\n\n  renderRows (data) {\n    if (data.length) {\n      this.element.classList.remove('sortable-table_empty');\n      this.addRows(data);\n    } else {\n      this.element.classList.add('sortable-table_empty');\n    }\n  }\n\n  sortData (id, order) {\n    const arr = [...this.data];\n    const column = this.headersConfig.find(item => item.id === id);\n    const {sortType, customSorting} = column;\n    const direction = order === 'asc' ? 1 : -1;\n\n    return arr.sort((a, b) => {\n      switch (sortType) {\n        case 'number':\n          return direction * (a[id] - b[id]);\n        case 'string':\n          return direction * a[id].localeCompare(b[id], 'ru');\n        case 'custom':\n          return direction * customSorting(a, b);\n        default:\n          return direction * (a[id] - b[id]);\n      }\n    });\n  }\n\n  getSubElements(element) {\n    const elements = element.querySelectorAll('[data-element]');\n\n    return [...elements].reduce((accum, subElement) => {\n      accum[subElement.dataset.element] = subElement;\n\n      return accum;\n    }, {});\n  }\n\n  remove() {\n    this.element.remove();\n    document.removeEventListener('scroll', this.onWindowScroll);\n  }\n\n  destroy() {\n    this.remove();\n    this.subElements = {};\n  }\n}\n","export default class ColumnChart {\n  element;\n  subElements = {};\n  chartHeight = 50;\n\n  constructor({\n    data = [],\n    label = '',\n    link = '',\n    value = 0\n  } = {}) {\n    this.data = data;\n    this.label = label;\n    this.link = link;\n    this.value = value;\n\n    this.render();\n  }\n\n  getColumnBody(data) {\n    const maxValue = Math.max(...data);\n\n    return data\n    .map(item => {\n      const scale = this.chartHeight / maxValue;\n      const percent = (item / maxValue * 100).toFixed(0);\n\n      return `<div style=\"--value: ${Math.floor(item * scale)}\" data-tooltip=\"${percent}%\"></div>`;\n    })\n    .join('');\n  }\n\n  getLink() {\n    return this.link ? `<a class=\"column-chart__link\" href=\"${this.link}\">View all</a>` : '';\n  }\n\n  get template () {\n    return `\n      <div class=\"column-chart column-chart_loading\" style=\"--chart-height: ${this.chartHeight}\">\n        <div class=\"column-chart__title\">\n          Total ${this.label}\n          ${this.getLink()}\n        </div>\n        <div class=\"column-chart__container\">\n          <div data-element=\"header\" class=\"column-chart__header\">\n            ${this.value}\n          </div>\n          <div data-element=\"body\" class=\"column-chart__chart\">\n            ${this.getColumnBody(this.data)}\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  async render() {\n    const element = document.createElement('div');\n\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n\n    this.element.classList.remove(`column-chart_loading`);\n\n    this.subElements = this.getSubElements(this.element);\n\n    return this.element;\n  }\n\n  getSubElements (element) {\n    const elements = element.querySelectorAll('[data-element]');\n\n    return [...elements].reduce((accum, subElement) => {\n      accum[subElement.dataset.element] = subElement;\n\n      return accum;\n    }, {});\n  }\n\n  update ({headerData, bodyData}) {\n    this.subElements.header.textContent = headerData;\n    this.subElements.body.innerHTML = this.getColumnBody(bodyData);\n  }\n\n  destroy() {\n    this.element.remove();\n  }\n}\n","const header = [\n  {\n    id: 'images',\n    title: 'Image',\n    sortable: false,\n    template: data => {\n      return `\n          <div class=\"sortable-table__cell\">\n            <img class=\"sortable-table-image\" alt=\"Image\" src=\"${(data[0]) ? data[0].url : \"\"}\">\n          </div>\n        `;\n    }\n  },\n  {\n    id: 'title',\n    title: 'Name',\n    sortable: true,\n    sortType: 'string'\n  },\n  {\n    id: 'quantity',\n    title: 'Quantity',\n    sortable: true,\n    sortType: 'number'\n  },\n  {\n    id: 'price',\n    title: 'Price',\n    sortable: true,\n    sortType: 'number'\n  },\n  {\n    id: 'status',\n    title: 'Status',\n    sortable: true,\n    sortType: 'number',\n    template: data => {\n      return `<div class=\"sortable-table__cell\">\n          ${data > 0 ? 'Active' : 'Inactive'}\n        </div>`;\n    }\n  },\n];\n\nexport default header;\n","import RangePicker from '../../components/range-picker/index.js';\nimport SortableTable from '../../components/sortable-table/index.js';\nimport ColumnChart from '../../components/column-chart/index.js';\nimport header from './bestsellers-header.js';\n\nimport fetchJson from '../../utils/fetch-json.js';\n\nexport default class Page {\n  element;\n  subElements = {};\n  components = {};\n\n  async getDataForColumnCharts (from, to) {\n    console.log(process.env.BACKEND_URL);\n    const ORDERS = `${process.env.BACKEND_URL}api/dashboard/orders?from=${from.toISOString()}&to=${to.toISOString()}`;\n    const SALES = `${process.env.BACKEND_URL}api/dashboard/sales?from=${from.toISOString()}&to=${to.toISOString()}`;\n    const CUSTOMERS = `${process.env.BACKEND_URL}api/dashboard/customers?from=${encodeURIComponent(from.toISOString())}&to=${encodeURIComponent(to.toISOString())}`;\n\n    const ordersData = fetchJson(ORDERS);\n    const salesData = fetchJson(SALES);\n    const customersData = fetchJson(CUSTOMERS);\n\n    const data = await Promise.all([ordersData, salesData, customersData]);\n    return data.map(item => Object.values(item));\n  }\n\n  async updateTableComponent (from, to) {\n\n    this.updateCssClass([\"sortableTable\"], \"add\", [\"sortable-table_loading\"]);\n\n    const data = await fetchJson(`${process.env.BACKEND_URL}api/dashboard/bestsellers?_start=1&_end=20&from=${from.toISOString()}&to=${to.toISOString()}`);\n    this.components.sortableTable.addRows(data);\n\n    this.updateCssClass([\"sortableTable\"], \"remove\", [\"sortable-table_loading\"]); \n  }\n\n  async updateChartsComponents (from, to) {\n    const columnChartNames = [\"ordersChart\", \"salesChart\", \"customersChart\"];\n    const cssClassList = [\"column-chart_loading\"];\n    this.updateCssClass(columnChartNames, \"add\", cssClassList);\n\n    const [ordersData, salesData, customersData] = await this.getDataForColumnCharts(from, to);\n    const ordersDataTotal = ordersData.reduce((accum, item) => accum + item, 0);\n    const salesDataTotal = salesData.reduce((accum, item) => accum + item, 0);\n    const customersDataTotal = customersData.reduce((accum, item) => accum + item, 0);\n\n    this.components.ordersChart.update({headerData: ordersDataTotal, bodyData: ordersData});\n    this.components.salesChart.update({headerData: '$' + salesDataTotal, bodyData: salesData});\n    this.components.customersChart.update({headerData: customersDataTotal, bodyData: customersData});\n\n    this.updateCssClass(columnChartNames, \"remove\", cssClassList);\n  }\n\n  /**\n   * Adds or removes css class(es) from component(s)\n   * \n   * @param {array} componentNamesList \n   * @param {string} action ['add' | 'remove']\n   * @param {array} classNameList \n   */\n  updateCssClass(componentNamesList, action, classNameList) {\n    for (const componentName of componentNamesList) {\n      const {element} = this.components[componentName];\n\n      for (const className of classNameList) {\n        switch (action) {\n          case \"add\":\n            element.classList.add(className);\n            break;\n          case \"remove\":\n            element.classList.remove(className);\n            break;\n        }\n      }\n    }\n  }\n\n  async initComponents () {\n    const to = new Date();\n    const from = new Date(to.getTime() - (30 * 24 * 60 * 60 * 1000));\n    const [ordersData, salesData, customersData] = await this.getDataForColumnCharts(from, to);\n\n    const rangePicker = new RangePicker({\n      from,\n      to\n    });\n\n    const sortableTable = new SortableTable(header, {\n      url: `api/dashboard/bestsellers?_start=1&_end=20&from=${from.toISOString()}&to=${to.toISOString()}`,\n      isSortLocally: true\n    });\n\n    const ordersChart = new ColumnChart({\n      data: ordersData,\n      label: 'orders',\n      value: ordersData.reduce((accum, item) => accum + item, 0),\n      link: '#'\n    });\n\n    const salesChart = new ColumnChart({\n      data: salesData,\n      label: 'sales',\n      value: '$' + salesData.reduce((accum, item) => accum + item, 0),\n    });\n\n    const customersChart = new ColumnChart({\n      data: customersData,\n      label: 'customers',\n      value: customersData.reduce((accum, item) => accum + item, 0),\n    });\n\n    this.components.sortableTable = sortableTable;\n    this.components.ordersChart = ordersChart;\n    this.components.salesChart = salesChart;\n    this.components.customersChart = customersChart;\n    this.components.rangePicker = rangePicker;\n  }\n\n  get template () {\n    return `<div class=\"dashboard\">\n      <div class=\"content__top-panel\">\n        <h2 class=\"page-title\">Dashboard</h2>\n        <!-- RangePicker component -->\n        <div data-element=\"rangePicker\"></div>\n      </div>\n      <div data-element=\"chartsRoot\" class=\"dashboard__charts\">\n        <!-- column-chart components -->\n        <div data-element=\"ordersChart\" class=\"dashboard__chart_orders\"></div>\n        <div data-element=\"salesChart\" class=\"dashboard__chart_sales\"></div>\n        <div data-element=\"customersChart\" class=\"dashboard__chart_customers\"></div>\n      </div>\n\n      <h3 class=\"block-title\">Best sellers</h3>\n\n      <div data-element=\"sortableTable\">\n        <!-- sortable-table component -->\n      </div>\n    </div>`;\n  }\n\n  async render () {\n    const element = document.createElement('div');\n\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(this.element);\n\n    await this.initComponents();\n\n    this.renderComponents();\n    this.initEventListeners();\n\n    return this.element;\n  }\n\n  renderComponents () {\n    Object.keys(this.components).forEach(component => {\n      const root = this.subElements[component];\n      const { element } = this.components[component];\n\n      root.append(element);\n    });\n  }\n\n  getSubElements ($element) {\n    const elements = $element.querySelectorAll('[data-element]');\n\n    return [...elements].reduce((accum, subElement) => {\n      accum[subElement.dataset.element] = subElement;\n\n      return accum;\n    }, {});\n  }\n\n  initEventListeners () {\n    this.components.rangePicker.element.addEventListener('date-select', event => {\n      const { from, to } = event.detail;\n      this.updateChartsComponents(from, to);\n      this.updateTableComponent(from, to);\n    });\n  }\n\n  destroy () {\n    for (const component of Object.values(this.components)) {\n      component.destroy();\n    }\n  }\n}\n","// same as fetch, but throws FetchError in case of errors\n// status >= 400 is an error\n// network error / json error are errors\n\nexport default async function(url, params) {\n  let response;\n\n  try {\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\n    response = await fetch(url.toString(), params);\n  } catch(err) {\n    throw new FetchError(response, \"Network error has occurred.\");\n  }\n\n  let body;\n\n  if (!response.ok) {\n    let errorText = response.statusText; // Not Found (for 404)\n\n    try {\n      body = await response.json();\n\n      errorText = (body.error && body.error.message) || (body.data && body.data.error && body.data.error.message) || errorText;\n    } catch (error) { /* ignore failed body */ }\n\n    let message = `Error ${response.status}: ${errorText}`;\n\n    throw new FetchError(response, body, message);\n  }\n\n  try {\n    return await response.json();\n  } catch(err) {\n    throw new FetchError(response, null, err.message);\n  }\n}\n\nexport class FetchError extends Error {\n  name = \"FetchError\";\n\n  constructor(response, body, message) {\n    super(message);\n    this.response = response;\n    this.body = body;\n  }\n}\n\n// handle uncaught failed fetch through\nwindow.addEventListener('unhandledrejection', event => {\n  if (event.reason instanceof FetchError) {\n    alert(event.reason.message);\n  }\n});\n\n"],"sourceRoot":""}